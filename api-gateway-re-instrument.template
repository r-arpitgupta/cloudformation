{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Parameters": {
    "RestApiId": {
      "Type": "String"
    },
    "RootResourceId": {
      "Type": "String"
    },
    "IntegrationCredentials": {
      "Type": "String"
    },
    "LambdaArn": {
      "Type": "String"
    }
  },
  "Resources": {
    "ReInstrumentResource": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "RestApiId": {
          "Ref": "RestApiId"
        },
        "ParentId": {
          "Ref": "RootResourceId"
        },
        "PathPart": "re-instrument"
      }
    },
    "ReInstrumentWithChannelIdResource": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "RestApiId": {
          "Ref": "RestApiId"
        },
        "ParentId": {
          "Ref": "ReInstrumentResource"
        },
        "PathPart": "{chid}"
      }
    },
    "ReInstrumentGet": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "ApiKeyRequired": true,
        "HttpMethod": "GET",
        "AuthorizationType": "NONE",
        "Integration": {
          "Type": "AWS",
          "IntegrationHttpMethod": "POST",
          "Credentials": {
            "Ref": "IntegrationCredentials"
          },
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:aws:apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Ref": "LambdaArn"
                },
                "/invocations"
              ]
            ]
          },
          "RequestTemplates": {
            "application/json":
                "#set($inputRoot = $input.path('$')){\"api_gateway_request_id\": \"$input.params('api_gateway_request_id')\",  \"path\":\"/re-instrument/$input.params('chid')\",  \"httpMethod\":\"GET\",  \"pathParameters\": {\"chid\": \"$input.params('chid')\"}}"
          },
          "IntegrationResponses": [
            {
              "ResponseTemplates": {
                "application/json": ""
              },
              "StatusCode": 200
            }
          ]
        },
        "ResourceId": {
          "Ref": "ReInstrumentWithChannelIdResource"
        },
        "RestApiId": {
          "Ref": "RestApiId"
        },
        "MethodResponses": [
          {
            "ResponseModels": {
              "application/json": "Empty"
            },
            "StatusCode": 200
          }
        ]
      }
    },
    "ReInstrumentPost": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "ApiKeyRequired": true,
        "HttpMethod": "POST",
        "AuthorizationType": "NONE",
        "Integration": {
          "Type": "AWS",
          "IntegrationHttpMethod": "POST",
          "Credentials": {
            "Ref": "IntegrationCredentials"
          },
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:aws:apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Ref": "LambdaArn"
                },
                "/invocations"
              ]
            ]
          },
          "RequestTemplates": {
            "application/json":
               "#set($inputRoot = $input.path('$')){\"asset_ids\": \"$input.params('asset-ids')\",  \"api_gateway_request_id\": \"$context.requestId\",\"path\":\"/re-instrument/$input.params('chid')\",\"httpMethod\":\"POST\",  \"pathParameters\": {\"chid\": \"$input.params('chid')\"}}"
          },
          "IntegrationResponses": [
            {
              "ResponseTemplates": {
                "application/json": "{\"api_gateway_request_id\":\"$context.requestId\"}"
              },
              "StatusCode": 200
            }
          ]
        },
        "ResourceId": {
          "Ref": "ReInstrumentWithChannelIdResource"
        },
        "RestApiId": {
          "Ref": "RestApiId"
        },
        "MethodResponses": [
          {
            "ResponseModels": {
              "application/json": "Empty"
            },
            "StatusCode": 200
          }
        ]
      }
    }
  },
  "Outputs": {}
}