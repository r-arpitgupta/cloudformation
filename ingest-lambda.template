{
  "Description": "Template to create VOD ingest Lambda function using CloudFormation.",
  "Parameters": {
    "Prefix": {
      "Type": "String"
    },
    "FunctionName": {
      "Type": "String"
    },
    "RoleArn": {
      "Description": "ARN for IAM Execution Role used by Lambda function",
      "Type": "String"
    },
    "ZipFileLocation": {
      "Type": "String",
      "Description": "location of the VOD ingest Lambda code in bucket"
    },
    "CodeBucket": {
      "Type": "String",
      "Description": "S3 bucket name which has the code for VOD ingest Lambda"
    },
    "Timeout": {
      "Type": "Number",
      "Default": 300,
      "Description": "Timeout for VOD ingest lambda function in seconds"
    },
    "MemorySize": {
      "Type": "Number",
      "Default": 256,
      "Description": "Valid MemorySize that needs to be assigned for lambda function"
    },
    "Handler": {
      "Type": "String",
      "Description": "Handler to be called"
    },
    "CloudWatchLogExpiryInDays": {
      "Description": "Number of days after which cloudwatch logs for Lambda will be deleted",
      "Type": "Number"
    },
    "VCPUs": {
      "Type": "Number",
      "Default": 1,
      "Description": "No of cpus for container"
    },
    "Memory": {
      "Type": "Number",
      "Default": 2048,
      "Description": "Memory in MB for container"
    },
    "UnitDuration": {
      "Type": "Number",
      "Default": 1800,
      "Description": "Determine vcpus and memory according to unit duration"
    },
    "ConfigTableName": {
      "Type": "String",
      "Default": "vod_channel_config",
      "Description": "DynamoDB table name for vod channel config"
    },
    "AssetInfoTableName": {
      "Type": "String",
      "Default": "vod_asset_info",
      "Description": "DynamoDB table name for vod asset information"
    },
    "CDNEndpoint": {
      "Type": "String",
      "Description": "CDN endpoint for annealed asset"
    },
    "Bucket": {
      "Type": "String",
      "Description": ""
    },
    "DBType":{
      "Type":"String",
      "Default":"DynamoDB"
    },
    "SQSSuccessNotificationQueueName":{
        "Type":"String"
    },
    "SQSFailureNotificationQueueName":{
        "Type":"String"
    }
  },
  "Resources": {
    "LambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Handler": {
          "Ref": "Handler"
        },
        "Role": {
          "Ref": "RoleArn"
        },
        "Code": {
          "S3Bucket": {
            "Ref": "CodeBucket"
          },
          "S3Key": {
            "Ref": "ZipFileLocation"
          }
        },
        "Runtime": "python3.8",
        "MemorySize": {
          "Ref": "MemorySize"
        },
        "Timeout": {
          "Ref": "Timeout"
        },
        "FunctionName": {
          "Fn::Sub": [
            "${Prefix}-${FunctionName}-${StackGuid}",
            {
              "StackGuid": {
                "Fn::Select": [
                  2,
                  {
                    "Fn::Split": [
                      "/",
                      {
                        "Ref": "AWS::StackId"
                      }
                    ]
                  }
                ]
              },
              "Prefix": {
                "Ref": "Prefix"
              }
            }
          ]
        },
        "Environment": {
          "Variables": {
            "VCPUS": {
              "Ref": "VCPUs"
            },
            "MEMORY": {
              "Ref": "Memory"
            },
            "UNIT_DURATION": {
              "Ref": "UnitDuration"
            },
            "DB_TYPE": {
              "Ref": "DBType"
            },
            "CONFIG_TABLE_NAME": {
              "Ref": "ConfigTableName"
            },
            "ASSET_INFO_TABLE_NAME": {
              "Ref": "AssetInfoTableName"
            },
            "CDN_ENDPOINT": {
              "Ref": "CDNEndpoint"
            },
            "BUCKET": {
              "Ref": "Bucket"
            },
            "SQSSuccessNotificationQueueName":{
                "Ref":"SQSSuccessNotificationQueueName"
            },
            "SQSFailureNotificationQueueName":{
                "Ref":"SQSSuccessNotificationQueueName"
            }
          }
        }
      }
    },
    "LambdaLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "/",
            [
              "/aws",
              "lambda",
              {
                "Ref": "LambdaFunction"
              }
            ]
          ]
        },
        "RetentionInDays": {
          "Ref": "CloudWatchLogExpiryInDays"
        }
      }
    }
  },
  "Outputs": {
    "LambdaFunction": {
      "Value": {
        "Fn::GetAtt": "LambdaFunction.Arn"
      },
      "Description": "Lambda Function ARN."
    }
  }
}